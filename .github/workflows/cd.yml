name: CD
on:
  release:
    branches: [master]
    # not triggered after creation with actions/create-release
    # types behavior from documentation (but it acts differently in fact):
    # - prereleased (update release: prerelease=true; in fact, never with published)
    # - released (update release: prerelease=false; in fact, also together with published)
    # - deleted (delete release)
    # - published - covers prereleased and released (in fact, only initially and only released)
    # - unpublished - covers deleted (in fact, never triggered)
    types: [released, prereleased, deleted, published]

jobs:
  pack-packages:
    runs-on: ubuntu-latest
    # published and released are triggered simultaneously.
    if: github.event.action == 'released' || github.event.action == 'prereleased' || (github.event.action == 'published' && github.event.release.prerelease == true)
    steps:
      - run: echo ${{ github.event.action }}

      - uses: actions/setup-dotnet@v1.7.2
        with: { dotnet-version: '5.0' }

      # todo: uncomment once actions/download-artifact supports cross workflow artifacts
      # https://github.com/actions/toolkit/pull/517
      # - name: create package (prepare binaries)
      #   uses: actions/download-artifact@v2.0.9
      #   with:
      #     name: release-binaries
      # it duplicates actions/upload-artifact
      # todo: remove once actions/download-artifact supports cross workflow artifacts.
      # https://github.com/actions/toolkit/pull/517
      - name: create package (prepare binaries workaround)
        uses: actions/cache@v2.1.5
        with:
          path: release-binaries
          key: ${{ runner.os }}-release-binaries-${{ env.VERSION }}
          restore-keys: ${{ runner.os }}-release-binaries-${{ env.VERSION }}
        env:
          VERSION: ${{ github.event.release.tag_name }}

      - name: create package (prepare dependencies)
        uses: actions/cache@v2.1.5
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: ${{ runner.os }}-nuget-

      - name: create package
        run: |
          NUGET_VERSION=$([ '${{ github.event.release.prerelease }}' == 'true' ] && echo ${{ env.VERSION }}-prerelease || echo ${{ env.VERSION }})
          # todo: uncomment once actions/download-artifact supports cross workflow artifacts
          # https://github.com/actions/toolkit/pull/517
          #find . -name *.csproj |
          find release-binaries -name *.csproj |
          xargs -i dotnet pack -p:PackageVersion=${NUGET_VERSION} --include-source --include-symbols -p:SymbolPackageFormat=snupkg -o packages -c Release --no-restore --no-build --no-dependencies -v n {}
        env:
          VERSION: ${{ github.event.release.tag_name }}

      - name: upload package
        uses: actions/upload-artifact@v2.2.3
        with:
          name: release-packages
          path: |
            packages/*.nupkg
            packages/*.snupkg
          retention-days: 30

      # it duplicates actions/upload-artifact
      # todo: remove once actions/download-artifact supports cross workflow artifacts.
      # https://github.com/actions/toolkit/pull/517
      - name: upload package (released workaround)
        uses: actions/cache@v2.1.5
        with:
          path: packages
          key: ${{ runner.os }}-released-packages-${{ env.VERSION }}
        env:
          VERSION: ${{ github.event.release.tag_name }}
        if: github.event.release.prerelease != true
      - name: upload package (prereleased workaround)
        uses: actions/cache@v2.1.5
        with:
          path: packages
          key: ${{ runner.os }}-prereleased-packages-${{ env.VERSION }}
        env:
          VERSION: ${{ github.event.release.tag_name }}
        if: github.event.release.prerelease == true

  publish-packages:
    runs-on: ubuntu-latest
    needs: pack-packages
    steps:
      - uses: actions/setup-dotnet@v1.7.2
        with: { dotnet-version: '5.0' }

      - name: publish package (prepare)
        uses: actions/download-artifact@v2.0.9
        with:
          name: release-packages

      - name: publish package
        run: |
          find . -name '*.nupkg' |
          xargs -i dotnet nuget push {} -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json -t 30 --skip-duplicate

  unpublish-packages:
    runs-on: ubuntu-latest
    if: github.event.action == 'deleted' # unpublished never occurs.
    steps:
      - run: echo ${{ github.event.action }}

      - uses: actions/setup-dotnet@v1.7.2
        with: { dotnet-version: '5.0' }

      # it duplicates actions/upload-artifact
      # todo: remove once actions/download-artifact supports cross workflow artifacts.
      # https://github.com/actions/toolkit/pull/517
      - name: delete packages (prepare released workaround)
        uses: actions/cache@v2.1.5
        with:
          path: packages
          key: ${{ env.KEY }}
          restore-keys: ${{ env.KEY }}
        env:
          KEY: ${{ runner.os }}-released-packages-${{ github.event.release.tag_name }}
      # it duplicates actions/upload-artifact
      # todo: remove once actions/download-artifact supports cross workflow artifacts.
      # https://github.com/actions/toolkit/pull/517
      - name: delete packages (prepare prereleased workaround)
        uses: actions/cache@v2.1.5
        with:
          path: packages
          key: ${{ env.KEY }}
          restore-keys: ${{ env.KEY }}
        env:
          KEY: ${{ runner.os }}-prereleased-packages-${{ github.event.release.tag_name }}

      - name: delete packages
        run: |
          REGEX="([a-z\.]*)\.([0-9\.]*)\.nupkg"
          # todo: uncomment once actions/download-artifact supports cross workflow artifacts
          # https://github.com/actions/toolkit/pull/517
          #FILES="*.nupkg"
          FILES="packages/*.nupkg"
          for FILE in $FILES
          do
              if [[ $FILE =~ $REGEX ]]
              then
                  dotnet nuget delete ${BASH_REMATCH[1]} ${BASH_REMATCH[2]}  -k ${{ secrets.NUGET_DELETE_API_KEY }} -s https://api.nuget.org/v3/index.json --non-interactive
              else
                  echo "Skip $FILE"
              fi
          done

      - name: delete tag (prepare)
        uses: actions/checkout@v2.3.4
      - name: delete tag
        run: git push origin -d ${{ github.event.release.tag_name }}
